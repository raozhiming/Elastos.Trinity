language: node_js
sudo: true

matrix:
  include:
    # - os: osx
    #   osx_image: xcode10.2
    #   env: NODEJS_VERSION=11 NDK=r18b
    #   addons:
    #     homebrew:
    #       taps: homebrew/cask-versions
    #       casks: adoptopenjdk8

    # - os: osx
    #   language: cpp
    #   osx_image: xcode10.2
    #   env: BUILD_EPKSIGNER
    #   before_install:
    #   install:
    #     - brew install shunit2
    #   script:
    #     - $TRAVIS_BUILD_DIR/ToolChains/src/epksigner/build.sh
    #     - $TRAVIS_BUILD_DIR/ToolChains/src/epksigner/_build/sample/sample
    #     - echo "---- use default python ----"
    #     - $TRAVIS_BUILD_DIR/ToolChains/tests/sign_epk_test.sh
    #     - $TRAVIS_BUILD_DIR/ToolChains/tests/verify_epk_test.sh
    #     - echo "---- use python3 ----"
    #     - export PYTHON3=ON
    #     - $TRAVIS_BUILD_DIR/ToolChains/tests/sign_epk_test.sh
    #     - $TRAVIS_BUILD_DIR/ToolChains/tests/verify_epk_test.sh

    - language: android
      dist: trusty
      env: NODEJS_VERSION=12 NDK=r18b DEPLOY=TRUE
      android:
        components:
          - tools
          - platform-tools
          - build-tools-28.0.3
          - android-27
        licenses:
          - 'android-sdk-preview-license-.+'
          - 'android-sdk-license-.+'
          - 'google-gdk-license-.+'

    - language: cpp
      dist: xenial
      env: BUILD_EPKSIGNER
      before_install:
      install:
        - sudo apt-get install shunit2
      script:
        - $TRAVIS_BUILD_DIR/ToolChains/src/epksigner/build.sh
        - $TRAVIS_BUILD_DIR/ToolChains/src/epksigner/_build/sample/sample
        - echo "---- use default python ----"
        - $TRAVIS_BUILD_DIR/ToolChains/tests/sign_epk_test.sh
        - $TRAVIS_BUILD_DIR/ToolChains/tests/verify_epk_test.sh
        - echo "---- use python3 ----"
        - export PYTHON3=ON
        - $TRAVIS_BUILD_DIR/ToolChains/tests/sign_epk_test.sh
        - $TRAVIS_BUILD_DIR/ToolChains/tests/verify_epk_test.sh

before_install:
  - wget -q https://services.gradle.org/distributions/gradle-4.6-bin.zip
  - sudo unzip -q gradle-4.6-bin.zip -d $TRAVIS_HOME/gradle/
  - export PATH=$TRAVIS_HOME/gradle/gradle-4.6/bin:$PATH

  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      brew cask uninstall java;
      wget -q https://dl.google.com/android/repository/sdk-tools-darwin-4333796.zip;
      sudo unzip -q sdk-tools-darwin-4333796.zip -d $TRAVIS_HOME/android-sdk/;
      export ANDROID_HOME=$TRAVIS_HOME/android-sdk;
      sudo chmod -R 777 $ANDROID_HOME;
      wget -q https://dl.google.com/android/repository/android-ndk-${NDK}-darwin-x86_64.zip;
      sudo unzip -q android-ndk-${NDK}-darwin-x86_64.zip -d $TRAVIS_HOME/;
      export ANDROID_NDK_HOME=$TRAVIS_HOME/android-ndk-${NDK};
      export PATH=$ANDROID_HOME/tools/bin:$ANDROID_HOME/tools:$ANDROID_HOME/build-tools:$PATH;
      echo y | sudo sdkmanager "build-tools;28.0.3";
    else
      echo y | sdkmanager "ndk-bundle";
      echo y | sdkmanager "cmake;3.6.4111459";
      echo y | sdkmanager --channel=3 --channel=1 "cmake;3.10.2.4988404";
      echo y | sdkmanager "lldb;3.1";
      export ANDROID_NDK_HOME=$ANDROID_HOME/ndk-bundle;
    fi

install:
  - nvm install ${NODEJS_VERSION}
  - npm install -g cordova ionic

script:
  # - $TRAVIS_BUILD_DIR/ToolChains/bin/build all
  # - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
  #     cd $TRAVIS_BUILD_DIR/Runtime/platforms/ios && xcodebuild -showsdks;
  #     sudo xcode-select -switch /Applications/Xcode.app/Contents/Developer/;
  #     xcodebuild -scheme Elastos build -sdk iphonesimulator;
  #   fi
  # # - cd $TRAVIS_BUILD_DIR/Runtime/platforms/android && gradle assembleRelease &&
  # - ls -l $TRAVIS_BUILD_DIR/Runtime/platforms/android/app/build/outputs/apk/debug/
  #
  # - if [[ "$TRAVIS_EVENT_TYPE" == "cron" && "$TRAVIS_BRANCH" == "dev" && "$DEPLOY" != "" ]]; then
  - if [[ "$TRAVIS_BRANCH" == "dev" && "$DEPLOY" != "" ]]; then
      ret=.ci_scripts/checkCommit.sh;
      if [[ "$ret" -ne 1 ]]; then
        echo "no commit, do not upload apk!";
        DEPLOY="";
      fi;
    else
      DEPLOY="";
    fi

before_deploy:
  # Set up git user name and tag this commit
  - git config --local user.name "raozhiming"
  - git config --local user.email "raozhiming@elastos.org"
  - export TRAVIS_TAG=${TRAVIS_TAG:-$(date +'%Y%m%d%H')-$(git log --format=%h -1)}
  - git tag $TRAVIS_TAG

deploy:
  provider: releases
  api_key: $GIT_TOKEN
  file_glob: true
  file: $TRAVIS_TAG-$BUILD_ENV*.tar.gz
  skip_cleanup: true
  prerelease: true
  on:
    condition: $DEPLOY != ""
    # branches:
    #   only:
    #     - master
